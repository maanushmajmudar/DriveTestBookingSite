<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Appointment Page</title>
    <link rel="stylesheet" href="/css/styles.css" />
  </head>
  <body>
    <!-- Navigation -->
    <%- include('../public/common/layout_nav') %>

    <main>
      <div class="container">
        <h1>Appointment Page</h1>
        <label for="datePicker">Select date:</label>
        <input type="date" id="datePicker" onchange="enableSlots()" />
        <h2>Select time slots:</h2>
        <div class="appointment-slots" id="slotContainer"></div>

        <button id="saveButton" onclick="saveAppointment()" disabled>
          Save
        </button>
      </div>

      <button id="appointmentButton" onclick="">Check Appointments</button>
    </main>

    <%- include('../public/common/layout_footer') %>

    <script>
      var dataList = [];
      const slots = [
        "9:00 am",
        "9:30 am",
        "10:00 am",
        "10:30 am",
        "11:00 am",
        "11:30 am",
        "12:00 pm",
        "12:30 pm",
        "1:00 pm",
        "1:30 pm",
        "2:00 pm",
      ];

      async function saveAppointment() {
        const datePicker = document.getElementById("datePicker");
        const selectedDate = datePicker.value;
        const slotsForDate = reservedSlotsByDate[selectedDate] || [];
        if (selectedDate && slotsForDate?.length > 0) {
          const body = {
            time: slotsForDate,
            date: selectedDate,
          };
          const response = await fetch(
            "http://localhost:4000/api/saveAppointmentData",
            {
              method: "POST",
              headers: {
                "Content-Type": "application/x-www-form-urlencoded",
              },
              body: new URLSearchParams(body),
            }
          );
          const data = await response.json();
          if (data?.message === "Saved") {
            getSlotsFromData(selectedDate);
            alert("Appointment Slots saved successfully.");
          }
        }
      }

      async function getSlotsFromData(date) {
        const body = {
          date: date,
        };
        const response = await fetch(
          "http://localhost:4000/api/get-appointment",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
            body: new URLSearchParams(body),
          }
        );
        const data = await response.json();
        if (data.appoinment.length > 0) {
          for (var i = 0; i < data?.appoinment.length; i++) {
            dataList.push(data?.appoinment[i].time);
          }
        } else {
          dataList = [];
        }
      }

      const reservedSlotsByDate = {};

      async function enableSlots() {
        const datePicker = document.getElementById("datePicker");
        const selectedDate = datePicker.value;

        if (!selectedDate) {
          const slotContainer = document.getElementById("slotContainer");
          slotContainer.innerHTML = "";
          const saveButton = document.getElementById("saveButton");
          saveButton.style.display = "none";
          saveButton.disabled = true;
          return;
        } else {
          await getSlotsFromData(selectedDate);
        }

        const slotContainer = document.getElementById("slotContainer");

        slotContainer.innerHTML = "";
        const slotsForDate = reservedSlotsByDate[selectedDate] || [];

        slots.forEach((slot) => {
          const button = document.createElement("button");
          button.classList.add("slot-button");
          button.textContent = slot;
          button.value = slot;

          if (dataList.includes(slot)) {
            button.disabled = true;
          } else {
            button.disabled = false;
            button.onclick = () => reserveSlot(selectedDate, slot, button);
          }
          slotContainer.appendChild(button);
        });

        const saveButton = document.getElementById("saveButton");
        saveButton.style.display = "block";
        saveButton.disabled = false;
      }
      function reserveSlot(date, timeSlot, button) {
        const slotsForDate = reservedSlotsByDate[date] || [];
        if (slotsForDate.includes(timeSlot)) {
          alert("This time slot is already reserved for the selected date.");
          return;
        }

        if (!reservedSlotsByDate[date]) {
          reservedSlotsByDate[date] = [];
        }
        reservedSlotsByDate[date].push(timeSlot);
        console.log(reservedSlotsByDate);
        button.disabled = true;
      }
    </script>
  </body>
</html>
